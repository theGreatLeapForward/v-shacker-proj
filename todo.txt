TODO:

- Interfacing
- Input parsing
- Text and website processing
- Output

Current options:
    Study Resources
    Practice Questions

Division of labor:
Ryden and sam do the processing (let me know of all/any parameters needed, ect.)
Mendel does everything else

main file does startup tasks and stuff

stuff
# def quizpage(request, form: InputForm = None):
#     if form is None:
#         return HttpResponseRedirect(reverse('notinator:homepage'))
#
#     # subject = pr.getSubject(form.cleaned_data['text'])
#     subject = 'null_subject'
#
#     quiz_lists = Quiz.objects.filter(subject=subject)
#
#     if len(quiz_lists) == 0 or form.cleaned_data['override_make_new']:
#         new_quiz = Quiz(subject=subject)
#         new_quiz.on_subject_index = len(quiz_lists)
#         new_quiz.name = 'Quiz for ' + subject
#         new_quiz.description = 'Quiz for ' + subject
#
#         #  create question list using function calls to other code
#         new_quiz.save()
#
#     else:
#         new_quiz = quiz_lists[0]
#
#     return HttpResponseRedirect(reverse('notinator:quiz', args=(new_quiz.id,)))
#
#
#
# def resourespage(request, form: InputForm = None):
#     if form is None:
#         return HttpResponseRedirect(reverse('notinator:homepage'))
#
#     # subject = pr.getSubject(form.cleaned_data['text'])
#     subject = 'null_subject'
#
#     # checks if the resource list exists, and if not, creates it
#     resource_lists: models.QuerySet = ResourceList.objects.filter(subject=subject)
#
#     if len(resource_lists) == 0 or form.cleaned_data['override_make_new']:
#         new_resource = ResourceList(subject=subject)
#         new_resource.on_subject_index = len(resource_lists)
#         new_resource.name = 'Resources for ' + subject
#         new_resource.description = 'Resources for ' + subject
#
#         new_resource.resources
#
#         #  create resource list using function calls to other code
#         new_resource.save()
#     else:
#         new_resource = resource_lists[0]
#
#     return HttpResponseRedirect(reverse('notinator:resources', args=(new_resource.id,)))